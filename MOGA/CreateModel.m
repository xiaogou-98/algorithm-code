  function model=CreateModel()
%% 构建数学模型
%% 客户数据
 rand( 'seed' , 12.5)  %与第一次随机生成的数据相同
% clc,clear all
model.CenterX=  1.859732984  ;  % 配送中心 X坐标
model.CenterY=  0.515242211  ; % 配送中心 Y坐标

model.numCustomer  = 50 ;  %  k客户的数目
model.CustX = [1.859916055
1.859760452
1.860410065
1.860166828
1.860234491
1.860043874
1.860773725
1.860736104
1.860547995
1.860465233
1.860334813
1.860176807
1.859589898
1.860016365
1.860467739
1.860763689
1.860126647
1.8600514
1.85965762
1.860415073
1.86067336
1.861037083
1.860568063
1.860055495
1.859945344
1.859752237
1.860232894
1.860564977
1.860792345
1.860842279
1.860930016
1.860312241
1.859643426
1.860047501
1.859724202
1.861100886
1.859676755
1.860357716
1.860925165
1.861080293
1.86126031
1.860630763
1.860647425
1.859875223
1.860079783
1.860554759
1.860681743
1.861027611
1.860077334
1.860460057
]; % 客户 X坐标
model.CustY = [0.515125843
0.515415358
0.515263907
0.515551375
0.515667547
0.515248552
0.515535865
0.515377913
0.515744292
0.515171696
0.515413058
0.51505982
0.515443901
0.515476844
0.515619264
0.515792518
0.51588691
0.515132258
0.515623781
0.515022485
0.515314322
0.515564326
0.51506636
0.514822483
0.514908887
0.514822231
0.514849428
0.514836923
0.515164923
0.515320515
0.515322255
0.515592954
0.515955978
0.515401286
0.515304651
0.515149335
0.514958254
0.514860325
0.515166619
0.515802981
0.51585383
0.514816179
0.514907848
0.514789842
0.515853397
0.515154807
0.515804848
0.515634832
0.516002461
0.514894819
]; % 客户  Y坐标

model.Demand =   [1.5
5
3
2.5
3
2.6
2.7
3
2.8
3
2.1
1.8
3.2
2.4
3.8
1.3
1.8
2.1
2
3
3.2
2.6
2.9
5
3.2
2.4
5
2.6
4.1
3.8
1.5
2.4
2.8
1.9
1.8
3.4
2.7
4
3.3
3.1
2.6
2.3
2.9
1.5
4.6
3
2
2.8
3.3
1.5
] ; % 客户  需求  0.5~1.5
 
model.Ej = [5
6
2.5
3
4
3.5
16
5
4
7
20
21
20.5
1
2.5
4.5
5.5
10
11.5
14
15
12.5
13
16
17
5
8
5
16
2
3.5
5
6
8
8.5
7
5
3
2
12
4
2
7
5
6
13
10
11.5
3.5
7
] ;  % 其中Ej 开始服务时刻，时间窗的左边
model.Tj = [12
8
6.5
15
18
8
20
9
8
10.5
23
24
24
8
5.5
8
12
14
16
17.5
20
17
18
19.5
21
20
12
16
19
5
10.5
15
10
14
16.5
13.5
15.5
17
15
24
15
16
12
8
9
24
20
18
20
24
] ;  

model.Tstart = 0 ;  
model.standQ = 20  ; 
model.standV = 1 ;  
model.NumVehicle = 10;  %
 

model.F = 100  ; 
model.A  = 10 ;  
model.c1 = [5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
5
];
model.c2 = [15
10000
15
15
15
10000
15
10000
15
15
15
15
15
15
10000
15
15
15
15
15
15
15
10000
15
15
15
10000
15
15
10000
15
15
15
15
10000
15
15
10000
15
15
15
15
10000
15
10000
15
15
15
15
15
];

model.nVar = model.numCustomer +model.NumVehicle -1 ;  
model.PenaltyCoefficient =  10^4 ; 


%%  配送中心 与 客户间的距离 
model.Center2CustD=  zeros( model.numCustomer ,1)  ;  %生成50行1列的全为0的矩阵
Q1=[ model.CenterX, model.CenterY  ];
for i=1:   model.numCustomer
    
    Q2= [  model.CustX(i)   model.CustY(i) ];
     model.Center2CustD(i)= 6371.004 * sqrt((cos(Q1(1))*cos(Q1(2))-(cos(Q2(1))*cos(Q2(2))))^2 + (sin(Q1(1))*cos(Q1(2))-(sin(Q2(1))*cos(Q2(2))))^2 + (sin(Q1(2))-sin(Q2(2)))^2);
    
end

% 客户间的距离矩阵
model.CustD=  zeros( model.numCustomer )  ;  
for i=1:   model.numCustomer
    for j=i:model.numCustomer
        Q1= [  model.CustX(i)   model.CustY(i) ];
        Q2= [  model.CustX(j)   model.CustY(j) ];
        model.CustD(i,j)= 6371.004 * sqrt((cos(Q1(1))*cos(Q1(2))-(cos(Q2(1))*cos(Q2(2))))^2 + (sin(Q1(1))*cos(Q1(2))-(sin(Q2(1))*cos(Q2(2))))^2 + (sin(Q1(2))-sin(Q2(2)))^2);
        model.CustD(j,i)=   model.CustD(i,j);
        
    end
end


